@model Library_MVC.Models.Member

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.Name)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Name)
    @Html.ValidationMessageFor(model => model.Name)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Surname)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Surname)
    @Html.ValidationMessageFor(model => model.Surname)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Email)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Email)
    @Html.ValidationMessageFor(model => model.Email)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Phone)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Phone)
    @Html.ValidationMessageFor(model => model.Phone)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Occupation)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Occupation)
    @Html.ValidationMessageFor(model => model.Occupation)
</div>

<div class="editor-label">
    Department
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.DepartmentID, ((IEnumerable<Library_MVC.Models.Department>)ViewBag.PossibleDepartments).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.Name), 
        Value = option.DepartmentID.ToString(),
        Selected = (Model != null) && (option.DepartmentID == Model.DepartmentID)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.DepartmentID)
</div>
